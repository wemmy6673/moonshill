"""

Revision ID: d8794fb611f0
Revises: 3f7ad5471d7e
Create Date: 2025-05-22 21:19:31.267669

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'd8794fb611f0'
down_revision: Union[str, None] = '3f7ad5471d7e'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('budget_allocations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('campaign_id', sa.Integer(), nullable=False),
    sa.Column('platform', sa.String(), nullable=False),
    sa.Column('percentage', sa.Float(), nullable=False),
    sa.Column('daily_budget', sa.Float(), nullable=False),
    sa.Column('max_cpc', sa.Float(), nullable=False),
    sa.Column('target_roi', sa.Float(), nullable=False),
    sa.Column('current_spend', sa.Float(), nullable=False),
    sa.Column('current_roi', sa.Float(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('last_updated', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['campaign_id'], ['campaigns.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('engagement_patterns',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('campaign_id', sa.Integer(), nullable=False),
    sa.Column('pattern_type', sa.String(), nullable=False),
    sa.Column('pattern_value', sa.String(), nullable=False),
    sa.Column('success_rate', sa.Float(), nullable=False),
    sa.Column('sample_size', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('last_updated', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['campaign_id'], ['campaigns.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('campaign_id', 'pattern_type', 'pattern_value', name='uq_pattern')
    )
    op.create_table('social_posts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('campaign_id', sa.Integer(), nullable=False),
    sa.Column('platform_type', sa.String(), nullable=False),
    sa.Column('content', sa.String(), nullable=False),
    sa.Column('post_stage', sa.String(), nullable=False),
    sa.Column('post_style', sa.String(), nullable=False),
    sa.Column('post_type', sa.String(), nullable=False),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('scheduled_time', sa.DateTime(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('last_updated', sa.DateTime(), nullable=True),
    sa.Column('published_at', sa.DateTime(), nullable=True),
    sa.Column('embeddings', postgresql.ARRAY(sa.Float()), nullable=True),
    sa.Column('engagement_metrics', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('post_metadata', postgresql.JSON(astext_type=sa.Text()), nullable=False),
    sa.ForeignKeyConstraint(['campaign_id'], ['campaigns.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('test_variants',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('variant_id', sa.String(), nullable=False),
    sa.Column('campaign_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('parameters', postgresql.JSON(astext_type=sa.Text()), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('sample_size', sa.Integer(), nullable=False),
    sa.Column('current_sample', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['campaign_id'], ['campaigns.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('variant_id')
    )
    op.create_table('post_analytics',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('post_id', sa.Integer(), nullable=False),
    sa.Column('campaign_id', sa.Integer(), nullable=False),
    sa.Column('platform_type', sa.String(), nullable=False),
    sa.Column('total_engagement', sa.Integer(), nullable=False),
    sa.Column('engagement_rate', sa.Float(), nullable=False),
    sa.Column('virality_score', sa.Float(), nullable=False),
    sa.Column('sentiment_score', sa.Float(), nullable=False),
    sa.Column('best_performing_time', sa.DateTime(), nullable=True),
    sa.Column('audience_demographics', postgresql.JSON(astext_type=sa.Text()), nullable=False),
    sa.Column('content_performance', postgresql.JSON(astext_type=sa.Text()), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('last_updated', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['campaign_id'], ['campaigns.id'], ),
    sa.ForeignKeyConstraint(['post_id'], ['social_posts.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('post_performance',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('post_id', sa.Integer(), nullable=False),
    sa.Column('campaign_id', sa.Integer(), nullable=False),
    sa.Column('platform_type', sa.String(), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('post_stage', sa.String(), nullable=False),
    sa.Column('post_style', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('engagement_metrics', postgresql.JSON(astext_type=sa.Text()), nullable=False),
    sa.Column('embeddings', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('virality_score', sa.Float(), nullable=True),
    sa.Column('engagement_rate', sa.Float(), nullable=True),
    sa.Column('sentiment_score', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['campaign_id'], ['campaigns.id'], ),
    sa.ForeignKeyConstraint(['post_id'], ['social_posts.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('post_recommendations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('post_id', sa.Integer(), nullable=False),
    sa.Column('suggested_improvements', postgresql.ARRAY(sa.String()), nullable=False),
    sa.Column('audience_insights', postgresql.JSON(astext_type=sa.Text()), nullable=False),
    sa.Column('content_suggestions', postgresql.ARRAY(sa.String()), nullable=False),
    sa.Column('timing_recommendations', postgresql.JSON(astext_type=sa.Text()), nullable=False),
    sa.Column('engagement_predictions', postgresql.JSON(astext_type=sa.Text()), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('last_updated', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['post_id'], ['social_posts.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('test_results',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('variant_id', sa.String(), nullable=False),
    sa.Column('campaign_id', sa.Integer(), nullable=False),
    sa.Column('impressions', sa.Integer(), nullable=False),
    sa.Column('engagement_rate', sa.Float(), nullable=False),
    sa.Column('conversion_rate', sa.Float(), nullable=False),
    sa.Column('revenue', sa.Float(), nullable=False),
    sa.Column('cost', sa.Float(), nullable=False),
    sa.Column('roi', sa.Float(), nullable=False),
    sa.Column('confidence_level', sa.Float(), nullable=False),
    sa.Column('is_significant', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['campaign_id'], ['campaigns.id'], ),
    sa.ForeignKeyConstraint(['variant_id'], ['test_variants.variant_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('test_results')
    op.drop_table('post_recommendations')
    op.drop_table('post_performance')
    op.drop_table('post_analytics')
    op.drop_table('test_variants')
    op.drop_table('social_posts')
    op.drop_table('engagement_patterns')
    op.drop_table('budget_allocations')
    # ### end Alembic commands ###
